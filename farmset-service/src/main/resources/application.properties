spring.application.name=farmset-service
server.port=${FARMSET_SERVICE_PORT:8085}

daily.farm.domain=${APPL_DOMAIN}

# Kafka (Spring Cloud Stream)

spring.cloud.stream.bindings.orderCreate-out-0.destination=order-create
spring.cloud.stream.bindings.orderCreate-out-0.group=order-create-group
spring.cloud.stream.bindings.orderCreate-out-0.content-type=application/json
spring.cloud.stream.bindings.orderCreate-out-0.consumer.concurrency=4

spring.cloud.function.definition=orderFailed
spring.cloud.stream.bindings.orderFailed-in-0.destination=order-failed
spring.cloud.stream.bindings.orderFailed-in-0.group=order-failed-group
spring.cloud.stream.bindings.orderFailed-in-0.content-type=application/json
spring.cloud.stream.bindings.orderFailed-in-0.consumer.concurrency=4


spring.cloud.stream.bindings.paymentCreate-out-0.destination=payment-create
spring.cloud.stream.bindings.paymentCreate-out-0.group=payment-create-group
spring.cloud.stream.bindings.paymentCreate-out-0.content-type=application/json
spring.cloud.stream.bindings.paymentCreate-out-0.consumer.concurrency=4


spring.kafka.producer.acks=1
spring.kafka.producer.linger-ms=5
spring.kafka.producer.batch-size=16384
spring.kafka.producer.compression-type=gzip
spring.kafka.producer.max-in-flight-requests-per-connection=5
spring.kafka.producer.retries=3
spring.kafka.producer.retry-backoff-ms=100
spring.cloud.stream.kafka.bindings.paymentCreate-out-0.producer.sync=false
spring.cloud.stream.kafka.bindings.orderCreate-out-0.producer.sync=false
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

spring.cloud.stream.kafka.binder.brokers=localhost:9092
logging.level.org.springframework.cloud.stream=DEBUG
#logging.level.org.apache.kafka=DEBUG





logging.level.root=INFO
logging.level.telran.daily_farm.service=DEBUG
logging.level.org.springframework.web=DEBUG

#server.error.include-message=always
server.error.include-message=never
server.error.include-stacktrace=never

spring.jpa.hibernate.ddl-auto=update

#for postgresql
spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url=${POSTGRESQL_URL}
#spring.datasource.username=${POSTGRESQL_USER}
#spring.datasource.password=${POSTGRESQL_PASSWORD}
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=1111

# HikariCP settings
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.pool-name=OrderServiceHikariPool

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.sql.init.mode=always

spring.jpa.open-in-view=false





#redis
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}
spring.data.redis.username=${REDIS_USER}
spring.data.redis.password=${REDIS_PASSWORD}
spring.data.redis.timeout=60000


#categories
farmset.categories.list=vegetables,fruits,dairy,meat,fish,eggs,bee products,bakery,homemade preservs,herbs,mixed,other

#sizes
farmset.sizes.list=small 1-2 kg,medium 4-5 kg,large 8-10 kg






